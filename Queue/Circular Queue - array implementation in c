/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<stdlib.h>
int rear=-1,front=-1,MAX=5;
int queue[5];

void enqueue(){
    int item;
    if((rear==MAX-1 && front==0) || ((rear+1)%MAX == front)){
        printf("\n Queue is full, cant insert");
        return;
    }
    else{
        printf("\n Enter the item to be inserted");
        scanf("%d",&item);
        if(front == -1 && rear == -1){
            front++;
            rear++;
        }
        else if(rear==MAX-1 && front!=0){
            rear=0;
        }
        else{
            rear++;
        }
        queue[rear] = item;
        printf("\n Inserted successfully");
    }
}
void dequeue(){
    if(front==-1){
        printf("\n Queue is empty, cant delete");
        return;
    }
    else{
        if(rear==front){
            front=-1;
            rear=-1;
        }
        else if(front == MAX-1){
            front =0;
        }
        else{
            front=front+1;
        }
        printf("\n Deleted successfully");
    }
}
void display(){
    int i,temp=front;
    if(rear==-1){
        printf("\n No elements in queue");
    }
    else{
        printf("\n QUEUE ELEMENTS \n");
        if(front>rear){
           for(i=front;i<=MAX-1;){
                printf("| %d | ",queue[i]);
                i=(i%MAX)+1;
            } 
            temp =0;
        }
        
        for(i=temp;i<=rear;){
            printf("| %d | ",queue[i]);
            i=(i%MAX)+1;
        }
    }
}
int main()
{
     int option;
    printf("\n CIRCULAR QUEUE ARRAY IMPLEMENTATION");
    while(1){
        printf("\n 1. Enqueue \n 2. Dequeue \n 3. Display \n 4. Exit");
        printf("\n Enter the choice : ");
        scanf("%d",&option);
        switch(option){
            case 1: 
                enqueue();
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                return 0;
        }    
    }
    

    return 0;
}
