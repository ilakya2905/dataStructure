/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<stdlib.h>

struct stack_node{
    int value;
    int *next;
};
struct stack_node *head= NULL;
void push(){
    int item;
    struct stack_node *ptr = (struct stack_node*)malloc(sizeof(struct stack_node));
    printf("\n Enter the element to be pushed: ");
    scanf("%d",&item);
    if(head==NULL){
        ptr->value = item;
        ptr->next = NULL;
        head = ptr;
        printf("\n Item pushed successfully");
    }
    else{
        ptr->value = item;
        ptr->next = head;
        head = ptr;
        printf("\n Item pushed successfully");

    }
    
}
void pop(){
    struct stack_node *ptr = (struct stack_node*)malloc(sizeof(struct stack_node));
    if(head==NULL){
        printf("\n No items in stack, cant pop");
        return;
    }
    else{
        ptr=head;
        head = ptr->next;
        free(ptr);
        printf("\n Item popped successfully");
    }
}
void display(){
    struct stack_node *ptr = (struct stack_node*)malloc(sizeof(struct stack_node));
    if(head == NULL){
        printf("\n No item inside stack");
        return;
    }
    else{
        ptr=head;
        printf("\n Stack elements");
        while(ptr!=NULL){
            printf("\n %d ",ptr->value);
            printf("\n ---------------------");
            ptr= ptr->next;
        }
    }
}
int main()
{
     int option;
    printf("\n STACK LINKED LIST IMPLEMENTATION");
    while(1){
        printf("\n 1. Push \n 2. Pop \n 3. Display \n 4. Exit");
        printf("\n Enter the choice : ");
        scanf("%d",&option);
        switch(option){
            case 1: 
                push();
                break;
            case 2:
                pop();
                break;
            case 3:
                display();
                break;
            case 4:
                return 0;
        }    
    }
    

    return 0;
}
