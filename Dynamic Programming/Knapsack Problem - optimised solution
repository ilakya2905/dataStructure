/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>

int maximum(int a, int b){
    if(a>b){
        return a;
    }
    else{
        return b;
    }
}
int knapsack(int c, int n, int w[], int v[]){
    int k[n+1][c+1];
    int i,j;
    for(i=0;i<=n;i++){
        for(j=0;j<=c;j++){
            // case 1: when no more elements or when there is 0 capacity
            if(i==0 || j==0){
                k[i][j] = 0;
            }
            // case 2: when the weight of the last element is greater than the total capacity
            else if(w[i-1]>c){
                k[i][j] = k[i-1][j];
            }

            else{
                int firstPossibility = v[i-1] + k[i-1][j-w[i-1]];
                int secondPossibility = k[i-1][j];
                k[i][j] = maximum(v[i-1] + k[i-1][j-w[i-1]],k[i-1][j]);

            }
        }
    }
    return k[n][c];
}

int main()
{
    int c,n,i,result;
    printf("\n KNAPSACK PROBLEM - OPTIMISED METHOD");
    printf("\n Enter the total capacity of the bag : ");
    scanf("%d", &c);
    printf("\n Enter number of elements : ");
    scanf("%d",&n);
    int v[n], w[n];
    printf("\n Enter the value and weigtht for each element : \n");
    for(i=0;i<n;i++){
        printf("\n Value : ");
        scanf("%d",&v[i]);
        printf("\n Weight : ");
        scanf("%d",&w[i]);
    }
    result = knapsack(c,n,w,v);
    printf("\n Maximum Value that can be stored is : %d", result);
    return 0;
}
